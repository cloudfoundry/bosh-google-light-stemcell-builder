---
groups:
- name: all-gcp
  jobs:
  - ubuntu-trusty-stemcell-3363
  - ubuntu-trusty-stemcell-3421
  - ubuntu-trusty-stemcell-3445
  - ubuntu-trusty-stemcell-3468
  - ubuntu-trusty-stemcell-3541
  - ubuntu-trusty-stemcell-3586
  - ubuntu-xenial-stemcell-97
  - ubuntu-xenial-stemcell-170

- name: "trusty"
  jobs:
  - ubuntu-trusty-stemcell-3363
  - ubuntu-trusty-stemcell-3421
  - ubuntu-trusty-stemcell-3445
  - ubuntu-trusty-stemcell-3468
  - ubuntu-trusty-stemcell-3541
  - ubuntu-trusty-stemcell-3586

- name: "xenial"
  jobs:
  - ubuntu-xenial-stemcell-97
  - ubuntu-xenial-stemcell-170

shared:
  - &get-cpi-src
    get: builder-src
    trigger: false
  - &get-bosh-cli
    get: bosh-cli
    trigger: false
  - &get-cpi-release
    get: bosh-cpi-release
    trigger: false
  - &create-light-stemcell
    task: create-light-stemcell
    file: builder-src/ci/tasks/build-light-stemcell.yml
    params:
      BUCKET_NAME:          ((google_raw_stemcells_bucket_name))
      STEMCELL_BUCKET_NAME: ((bosh_io_light_stemcell_bucket))
  - &create-lts-light-stemcell
    task: create-light-stemcell
    file: builder-src/ci/tasks/build-light-stemcell.yml
    params:
      BUCKET_NAME:           ((lts_google_raw_stemcells_bucket_name))
      STEMCELL_BUCKET_NAME:  ((lts_light_bucket_name))
      AWS_ACCESS_KEY_ID:     ((lts_light_bucket_access_key))
      AWS_SECRET_ACCESS_KEY: ((lts_light_bucket_secret_key))
  - &cleanup-failed-run-instructions
    task: cleanup-failed-run-instructions
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args:
        - |
          * remove artifacts of failed jobs:
          ```bash
          gcloud auth revoke --all # start with clean slate
          gcloud auth activate-service-account light-stemcell-editor@bosh-cpi.iam.gserviceaccount.com --key-file <(lpass show --note "THE LASTPASS NOTE" | grep -v "^#" )
          gsutil rm gs://bosh-gce-raw-stemcells/STEMCELL_TO_BE_DELETED_raw.tar.gz
          gsutil rm gs://bosh-gce-raw-stemcells/STEMCELL_TO_BE_DELETED_raw.tar.gz.sha1
          gcloud auth revoke --all
          ```
          * re-fly pipeline after commenting-out `disable_manual_trigger: true`
          * trigger failed jobs
          * re-fly pipeline after uncommenting `disable_manual_trigger: true`
  - &upload-ubuntu-raw-stemcells
    aggregate:
    - put: bosh-ubuntu-raw-stemcells
      params:
        file: raw-stemcell/bosh-stemcell-*-google-kvm-ubuntu-*-go_agent-raw-*.tar.gz
        predefined_acl: "publicRead"
    - put: bosh-ubuntu-raw-stemcells-sha1
      params:
        file: raw-stemcell/bosh-stemcell-*-google-kvm-ubuntu-*-go_agent-raw-*.tar.gz.sha1
        predefined_acl: "publicRead"
  - &upload-ubuntu-raw-lts-stemcells
    aggregate:
    - put: bosh-ubuntu-raw-lts-stemcells
      params:
        file: raw-stemcell/bosh-stemcell-*-google-kvm-ubuntu-*-go_agent-raw-*.tar.gz
        predefined_acl: "publicRead"
    - put: bosh-ubuntu-raw-lts-stemcells-sha1
      params:
        file: raw-stemcell/bosh-stemcell-*-google-kvm-ubuntu-*-go_agent-raw-*.tar.gz.sha1
        predefined_acl: "publicRead"
  - &verify-stemcell-boots
    do:
    - put: terraform
      params:
        generate_random_name: true
        terraform_source: builder-src/ci/terraform/
    - task: deploy-skeletal
      file: builder-src/ci/tasks/deploy-skeletal.yml
      params:
        SSH_PRIVATE_KEY: ((ssh_private_key))
        GCE_CREDENTIALS_JSON: ((gce_credentials_json))
    - task: publish-stemcell-and-checksum
      file: builder-src/ci/tasks/publish-stemcell-and-checksum.yml
      params:
        AWS_ACCESS_KEY_ID: ((google_light_stemcells_access_key_id))
        AWS_SECRET_ACCESS_KEY: ((google_light_stemcells_secret_access_key))
        AWS_DEFAULT_REGION: ((google_light_stemcells_region))
        AWS_ENDPOINT: ((google_light_stemcells_endpoint))
        OUTPUT_BUCKET: ((google_light_stemcells_bucket_name))
    - put: stemcells-index
      params:
        repository: stemcells-index-output
        rebase: true
    on_failure:
      *cleanup-failed-run-instructions
    ensure:
      task: destroy-skeletal
      file: builder-src/ci/tasks/destroy-skeletal.yml
      ensure:
        put: terraform
        params:
          env_name_file: terraform/name
          terraform_source: builder-src/ci/terraform/
          action: destroy
        get_params:
          action: destroy
  - &verify-lts-stemcell-boots
    do:
    - put: terraform
      resource: terraform-lts
      params:
        generate_random_name: true
        terraform_source: builder-src/ci/terraform/
    - task: deploy-skeletal
      file: builder-src/ci/tasks/deploy-skeletal.yml
      params:
        SSH_PRIVATE_KEY: ((ssh_private_key))
        GCE_CREDENTIALS_JSON: ((lts_gce_credentials_json))
    - put: lts-stemcells-index
      params:
        files:
        - light-stemcell/*.tgz
        version: stemcell/.resource/version
    on_failure:
      *cleanup-failed-run-instructions
    ensure:
      task: destroy-skeletal
      file: builder-src/ci/tasks/destroy-skeletal.yml
      ensure:
        put: terraform
        resource: terraform-lts
        params:
          env_name_file: terraform/name
          terraform_source: builder-src/ci/terraform/
          action: destroy
        get_params:
          action: destroy

jobs:
  - name: ubuntu-trusty-stemcell-3363
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-lts-stemcell-3363
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-lts-light-stemcell
      - *upload-ubuntu-raw-lts-stemcells
      - get: stemcells-index
        resource: ubuntu-lts-stemcell-3363
      - *verify-lts-stemcell-boots

  - name: ubuntu-trusty-stemcell-3421
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-lts-stemcell-3421
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-lts-light-stemcell
      - *upload-ubuntu-raw-lts-stemcells
      - get: stemcells-index
        resource: ubuntu-lts-stemcell-3421
      - *verify-lts-stemcell-boots

  - name: ubuntu-trusty-stemcell-3445
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-lts-stemcell-3445
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-lts-light-stemcell
      - *upload-ubuntu-raw-lts-stemcells
      - get: stemcells-index
        resource: ubuntu-lts-stemcell-3445
      - *verify-lts-stemcell-boots

  - name: ubuntu-trusty-stemcell-3468
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-lts-stemcell-3468
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-lts-light-stemcell
      - *upload-ubuntu-raw-lts-stemcells
      - get: stemcells-index
        resource: ubuntu-lts-stemcell-3468
      - *verify-lts-stemcell-boots

  - name: ubuntu-trusty-stemcell-3541
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-lts-stemcell-3541
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-lts-light-stemcell
      - *upload-ubuntu-raw-lts-stemcells
      - get: stemcells-index
        resource: ubuntu-lts-stemcell-3541
      - *verify-lts-stemcell-boots

  - name: ubuntu-trusty-stemcell-3586
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-stemcell-3586
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-light-stemcell
      - *upload-ubuntu-raw-stemcells
      - get: stemcells-index
      - *verify-stemcell-boots

  - name: ubuntu-xenial-stemcell-97
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-xenial-stemcell-97
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-light-stemcell
      - *upload-ubuntu-raw-stemcells
      - get: stemcells-index
      - *verify-stemcell-boots

  - name: ubuntu-xenial-stemcell-170
    serial: true
    plan:
      - aggregate:
        - get: stemcell
          resource: ubuntu-xenial-stemcell-170
          trigger: true
          version: every
          params:
            preserve_filename: true
        - *get-cpi-src
        - *get-bosh-cli
        - *get-cpi-release
      - *create-light-stemcell
      - *upload-ubuntu-raw-stemcells
      - get: stemcells-index
      - *verify-stemcell-boots

resources:

  - name: stemcells-index
    type: git
    source:
      uri: git@github.com:bosh-io/stemcells-cpi-index.git
      branch: master
      private_key: ((stemcells_index__github_key))

  - name: lts-stemcells-index
    type: metalink-repository
    source:
      uri: ((lts_light_stemcells_uri))
      options:
        private_key: ((lts_stemcells_private_key))
      url_handlers:
      - type: s3
        include:
        - (s3|https)://.*
        options:
          access_key: ((lts_light_bucket_access_key))
          secret_key: ((lts_light_bucket_secret_key))
      mirror_files:
      - destination: "s3://s3.amazonaws.com/((lts_light_bucket_name))/google/light/{{.Name}}"

  - name: bosh-cli
    type: s3
    source:
      bucket: bosh-cli-artifacts
      regexp: bosh-cli-(\d+\.\d+\.\d+)-linux-amd64

  - name: bosh-cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-google-cpi-release

  - name: builder-src
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-google-light-stemcell-builder.git
      branch: master

  - name: terraform
    type: terraform
    source:
      delete_on_failure: true
      storage:
        bucket: ((terraform_bucket_name))
        bucket_path: stemcell-ci-terraform/
        access_key_id: ((terraform_bucket_access_key))
        secret_access_key: ((terraform_bucket_secret_key))
      vars:
        gce_project_id: ((gce_project_id))
        gce_credentials_json: ((gce_credentials_json))

  - name: terraform-lts
    type: terraform
    source:
      delete_on_failure: true
      storage:
        bucket: ((lts_terraform_bucket_name))
        bucket_path: stemcell-ci-terraform/
        access_key_id: ((lts_terraform_bucket_access_key))
        secret_access_key: ((lts_terraform_bucket_secret_key))
      vars:
        gce_project_id: ((lts_gce_project_id))
        gce_credentials_json: ((lts_gce_credentials_json))

  - name: ubuntu-lts-stemcell-3363
    type: metalink-repository
    source:
      uri: ((lts_trusty_stemcells_uri))
      options:
        private_key: ((lts_stemcells_private_key))
      version: 3363.x
      include_files:
      - bosh-stemcell-*-google-kvm-ubuntu-trusty-go_agent.tgz
      url_handlers:
      - type: s3
        include:
        - (s3|https)://.*
        options:
          access_key: ((lts_heavy_bucket_access_key))
          secret_key: ((lts_heavy_bucket_secret_key))

  - name: ubuntu-lts-stemcell-3421
    type: metalink-repository
    source:
      uri: ((lts_trusty_stemcells_uri))
      options:
        private_key: ((lts_stemcells_private_key))
      version: 3421.x
      include_files:
      - bosh-stemcell-*-google-kvm-ubuntu-trusty-go_agent.tgz
      url_handlers:
      - type: s3
        include:
        - (s3|https)://.*
        options:
          access_key: ((lts_heavy_bucket_access_key))
          secret_key: ((lts_heavy_bucket_secret_key))

  - name: ubuntu-lts-stemcell-3445
    type: metalink-repository
    source:
      uri: ((lts_trusty_stemcells_uri))
      options:
        private_key: ((lts_stemcells_private_key))
      version: 3445.x
      include_files:
      - bosh-stemcell-*-google-kvm-ubuntu-trusty-go_agent.tgz
      url_handlers:
      - type: s3
        include:
        - (s3|https)://.*
        options:
          access_key: ((lts_heavy_bucket_access_key))
          secret_key: ((lts_heavy_bucket_secret_key))

  - name: ubuntu-lts-stemcell-3468
    type: metalink-repository
    source:
      uri: ((lts_trusty_stemcells_uri))
      options:
        private_key: ((lts_stemcells_private_key))
      version: 3468.x
      include_files:
      - bosh-stemcell-*-google-kvm-ubuntu-trusty-go_agent.tgz
      url_handlers:
      - type: s3
        include:
        - (s3|https)://.*
        options:
          access_key: ((lts_heavy_bucket_access_key))
          secret_key: ((lts_heavy_bucket_secret_key))

  - name: ubuntu-lts-stemcell-3541
    type: metalink-repository
    source:
      uri: ((lts_trusty_stemcells_uri))
      options:
        private_key: ((lts_stemcells_private_key))
      version: 3541.x
      include_files:
        - bosh-stemcell-*-google-kvm-ubuntu-trusty-go_agent.tgz
      url_handlers:
      - type: s3
        include:
        - (s3|https)://.*
        options:
          access_key: ((lts_heavy_bucket_access_key))
          secret_key: ((lts_heavy_bucket_secret_key))

  - name: ubuntu-stemcell-3586
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-trusty-go_agent
      force_regular: true
      version_family: "3586"

  - name: ubuntu-xenial-stemcell-97
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-xenial-go_agent
      force_regular: true
      version_family: "97"

  - name: ubuntu-xenial-stemcell-170
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-xenial-go_agent
      force_regular: true
      version_family: "170"

  - name: bosh-ubuntu-raw-stemcells
    type: gcs-resource
    source:
      json_key: ((gce_credentials_json))
      bucket:   ((google_raw_stemcells_bucket_name))
      regexp:   bosh-stemcell-([0-9\.]+)-google-kvm-ubuntu-*-go_agent-raw.tar.gz

  - name: bosh-ubuntu-raw-stemcells-sha1
    type: gcs-resource
    source:
      json_key: ((gce_credentials_json))
      bucket:   ((google_raw_stemcells_bucket_name))
      regexp:   bosh-stemcell-([0-9\.]+)-google-kvm-ubuntu-*-go_agent-raw.tar.gz.sha1

  - name: bosh-ubuntu-raw-lts-stemcells
    type: gcs-resource
    source:
      json_key: ((lts_gce_credentials_json))
      bucket:   ((lts_google_raw_stemcells_bucket_name))
      regexp:   bosh-stemcell-([0-9\.]+)-google-kvm-ubuntu-*-go_agent-raw.tar.gz

  - name: bosh-ubuntu-raw-lts-stemcells-sha1
    type: gcs-resource
    source:
      json_key: ((lts_gce_credentials_json))
      bucket:   ((lts_google_raw_stemcells_bucket_name))
      regexp:   bosh-stemcell-([0-9\.]+)-google-kvm-ubuntu-*-go_agent-raw.tar.gz.sha1

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
  - name: metalink-repository
    type: docker-image
    source:
      repository: dpb587/metalink-repository-resource
